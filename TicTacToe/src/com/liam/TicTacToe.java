packagecom.liam;importjava.util.Collections;importjava.util.Scanner;importjavafx.util.Pair;publicclassTicTacToe{privatestaticfinalBoardGameBoard=newBoard();privatestaticfinalScannerInput=newScanner(System.in);privatestaticfinalintCELL_SPACING=5;privatestaticGAME_STATEState=GAME_STATE.O_PLAYING;enumGAME_STATE{O_PLAYING,X_PLAYING,GAME_FINISHED}@SuppressWarnings("Duplicates")publicstaticvoidmain(String[]args){System.out.println("WouldyouliketoplayagainstanAI?(y/n):");booleanPlayingAI=true;do{StringResult=Input.nextLine();if(Result.startsWith("y")){PlayingAI=true;break;}elseif(Result.startsWith("n")){PlayingAI=false;break;}}while(true);do{Pair<Integer,Integer>Choice;switch(State){caseO_PLAYING:Choice=GetInput("O");GameBoard.SetCell(Choice.getKey().intValue(),Choice.getValue().intValue(),Board.CELL_STATE.O);PrintBoard();if(GameBoard.CheckWin(Choice.getKey().intValue()-1,Choice.getValue().intValue()-1,Board.CELL_STATE.O)){System.out.println("Youwon!Playagain?");State=GAME_STATE.GAME_FINISHED;}break;caseX_PLAYING:if(PlayingAI){if(GameBoard.ChooseAI()){System.out.println("TheAIbeatyou.Playagain?(y/n)");State=GAME_STATE.GAME_FINISHED;};}else{Choice=GetInput("X");GameBoard.SetCell(Choice.getKey().intValue(),Choice.getValue().intValue(),Board.CELL_STATE.X);if(GameBoard.CheckWin(Choice.getKey().intValue()-1,Choice.getValue().intValue()-1,Board.CELL_STATE.X)){System.out.println("Xwon!Playagain?(y/n)");State=GAME_STATE.GAME_FINISHED;}}PrintBoard();break;caseGAME_FINISHED:booleanPlayAgain;do{StringResult=Input.nextLine();if(Result.startsWith("y")){PlayAgain=true;break;}elseif(Result.startsWith("n")){PlayAgain=false;break;}}while(true);if(PlayAgain){GameBoard.ClearBoard();State=GAME_STATE.X_PLAYING;}else{System.exit(0);}break;}if(State==GAME_STATE.GAME_FINISHED)continue;State=(State==GAME_STATE.O_PLAYING)?GAME_STATE.X_PLAYING:GAME_STATE.O_PLAYING;}while(true);}@SuppressWarnings("Duplicates")privatestaticPair<Integer,Integer>GetInput(StringPlayerPrefix){System.out.println(String.format("%s'sturn!Whatrowwouldyouliketofill?[1-3]",PlayerPrefix));intRow=0,Column=0;while(Row==0){intChoice;try{Choice=Integer.parseInt(Input.nextLine());}catch(NumberFormatExceptione){continue;}if((1<=Choice&&Choice<=3)||GameBoard.IsRowFilled(Choice)){Row=Choice;}else{System.out.println("Thatnumberwon'twork,tryagain:");}}System.out.println("Whatcolumn?");while(Column==0){intChoice;try{Choice=Integer.parseInt(Input.nextLine());}catch(NumberFormatExceptione){continue;}if(1<=Choice&&Choice<=3&&!GameBoard.IsCellTaken(Row,Choice)){Column=Choice;}else{System.out.println("Thatnumberwon'twork,tryagain:");}}returnnewPair<Integer,Integer>(Row,Column);}privatestaticvoidPrintBoard(){StringSpace=String.join("",Collections.nCopies(CELL_SPACING,""));StringBuilderOutput=newStringBuilder();Output.append(String.format("|%s|%s|%s|\n",Space,Space,Space));Output.append(String.join("",Collections.nCopies((CELL_SPACING*3)+6,"-"))+"\n");for(intx=1;x<=3;x++){Output.append(String.format("|%s|%s|%s|\n",GameBoard.GetCell(x,1),GameBoard.GetCell(x,2),GameBoard.GetCell(x,3)));Output.append(String.join("",Collections.nCopies((CELL_SPACING*3)+6,"-"))+"\n");}Output.append(String.format("|%s|%s|%s|\n\n",Space,Space,Space));System.out.print(Output.toString());}}
